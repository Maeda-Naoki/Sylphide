stages:
  - build_docker
  - build

build_docker_image:
  stage: build_docker
  image: docker:20.10-dind
  services:
    - name: docker:20.10-dind
      alias: docker
  variables:
    # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:latest .
    - version=$(docker inspect --format='{{.ContainerConfig.Labels.version}}' $CI_REGISTRY_IMAGE:latest)
    - docker build --tag $CI_REGISTRY_IMAGE:$version .
    - docker push $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:$version
  rules:
    - changes:
        - Dockerfile
      when: always

build:
  stage: build
  image: $CI_REGISTRY_IMAGE
  services:
    - name: docker:19.03.12-dind
      alias: docker
  variables:
    # TODO: Enable TLS
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  script:
    - cross build --target $BUILD_TARGET
  parallel:
    matrix:
      - BUILD_TARGET: [x86_64-unknown-linux-gnu, x86_64-pc-windows-gnu]
  rules:
    # When the master / develop branch is changed
    - if: $CI_COMMIT_BRANCH == "master" ||
          $CI_COMMIT_BRANCH == "develop"
      when: always
    # When the MR target is the master / develop branch
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master" || 
          $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"
      when: always
    # When the MR source is a feature branch
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ "/^feature"
      when: manual
      allow_failure: true
